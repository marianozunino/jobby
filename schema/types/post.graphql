type Post {
  id: ID!
  title: String!
  content: String!
  slug: String!

  isHighlighted: Boolean!
  isPublished: Boolean!
  publishedAt: Timestamp
  previewImage: String

  createdAt: Timestamp!
  updatedAt: Timestamp!
  deletedAt: Timestamp

  # relations
  categories: [PostCategory!]! @goField(forceResolver: true)
}

input PostAggregationInput {
  id: SortOrder
  title: SortOrder
  slug: SortOrder
  isHighlighted: SortOrder
  isPublished: SortOrder
  publishedAt: SortOrder

  createdAt: SortOrder
  updatedAt: SortOrder
  deletedAt: SortOrder
}

input PostWhereInput {
  id: ID
  title: String
  slug: String
  isHighlighted: Boolean
  isPublished: Boolean
  publishedAt: Timestamp

  createdAt: Timestamp
  updatedAt: Timestamp
  deletedAt: Timestamp
}

input PostCreateInput {
  name: String!

  # if slug is not provided, it will be generated from name
  slug: String

  title: String!
  content: String!
  previewImage: String
  isHighlighted: Boolean!
  isPublished: Boolean!

  categories: [ID!]!
}

input PostUpdateInput {
  name: String!
  slug: String!
  title: String!
  content: String!
  previewImage: String
  isHighlighted: Boolean!

  categories: [ID!]
}

type PaginatedPostResponse {
  edges: [Post!]!
  total: Int!
  take: Int
  skip: Int
}
