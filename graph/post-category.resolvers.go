package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.35

import (
	"context"

	"github.com/google/uuid"
	"github.com/marianozunino/cc-backend-go/dtos"
)

// CreatePostCategory is the resolver for the createPostCategory field.
func (r *mutationResolver) CreatePostCategory(ctx context.Context, input dtos.PostCategoryCreateInput) (*dtos.PostCategory, error) {
	return r.Service.CreatePostCategory(ctx, input)
}

// DeletePostCategory is the resolver for the deletePostCategory field.
func (r *mutationResolver) DeletePostCategory(ctx context.Context, id uuid.UUID) (*dtos.PostCategory, error) {
	return r.Service.DeletePostCategory(ctx, id)
}

// UpdatePostCategory is the resolver for the updatePostCategory field.
func (r *mutationResolver) UpdatePostCategory(ctx context.Context, id uuid.UUID, input dtos.PostCategoryUpdateInput) (*dtos.PostCategory, error) {
	return r.Service.UpdatePostCategory(ctx, id, input)
}

// PostCategory is the resolver for the postCategory field.
func (r *queryResolver) PostCategory(ctx context.Context, id uuid.UUID) (*dtos.PostCategory, error) {
	return r.Service.GetPostCategory(ctx, id)
}

// PostCategories is the resolver for the postCategories field.
func (r *queryResolver) PostCategories(ctx context.Context, orderBy *dtos.PostCategoryAggregationInput, take *int, skip *int, where *dtos.PostCategoryWhereInput) (*dtos.PaginatedPostCategoryResponse, error) {
	return r.Service.PaginatedPostCategories(ctx, orderBy, take, skip, where)
}
