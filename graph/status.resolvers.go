package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.35

import (
	"context"

	"github.com/marianozunino/jobby/dtos"
	"github.com/marianozunino/jobby/graph/generated"
)

// CreateStatus is the resolver for the createStatus field.
func (r *mutationResolver) CreateStatus(ctx context.Context, input dtos.StatusCreateInput) (*dtos.Status, error) {
	return r.Service.CreateStatus(ctx, input)
}

// DeleteStatus is the resolver for the deleteStatus field.
func (r *mutationResolver) DeleteStatus(ctx context.Context, id string) (*dtos.Status, error) {
	return r.Service.DeleteStatus(ctx, id)
}

// UpdateStatus is the resolver for the updateStatus field.
func (r *mutationResolver) UpdateStatus(ctx context.Context, id string, input dtos.StatusUpdateInput) (*dtos.Status, error) {
	return r.Service.UpdateStatus(ctx, id, input)
}

// Status is the resolver for the status field.
func (r *queryResolver) Status(ctx context.Context, id string) (*dtos.Status, error) {
	return r.Service.GetStatus(ctx, id)
}

// Statuses is the resolver for the statuses field.
func (r *queryResolver) Statuses(ctx context.Context, orderBy *dtos.StatusAggregationInput, take *int, skip *int) (*dtos.PaginatedStatusResponse, error) {
	return r.Service.PaginatedStatuses(ctx, orderBy, take, skip)
}

// JobOffers is the resolver for the jobOffers field.
func (r *statusResolver) JobOffers(ctx context.Context, obj *dtos.Status) ([]*dtos.JobOffer, error) {
	return r.DataLoaders.Retrieve(ctx).JobOffersByStatusId.Load(obj.ID)
}

// Status returns generated.StatusResolver implementation.
func (r *Resolver) Status() generated.StatusResolver { return &statusResolver{r} }

type statusResolver struct{ *Resolver }
