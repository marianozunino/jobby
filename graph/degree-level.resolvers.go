package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.35

import (
	"context"

	"github.com/google/uuid"
	"github.com/marianozunino/cc-backend-go/dtos"
)

// CreateDegreeLevel is the resolver for the createDegreeLevel field.
func (r *mutationResolver) CreateDegreeLevel(ctx context.Context, input dtos.DegreeLevelCreateInput) (*dtos.DegreeLevel, error) {
	return r.Service.CreateDegreeLevel(ctx, input)
}

// DeleteDegreeLevel is the resolver for the deleteDegreeLevel field.
func (r *mutationResolver) DeleteDegreeLevel(ctx context.Context, id uuid.UUID) (*dtos.DegreeLevel, error) {
	return r.Service.DeleteDegreeLevel(ctx, id)
}

// UpdateDegreeLevel is the resolver for the updateDegreeLevel field.
func (r *mutationResolver) UpdateDegreeLevel(ctx context.Context, id uuid.UUID, input dtos.DegreeLevelUpdateInput) (*dtos.DegreeLevel, error) {
	return r.Service.UpdateDegreeLevel(ctx, id, input)
}

// DegreeLevel is the resolver for the degreeLevel field.
func (r *queryResolver) DegreeLevel(ctx context.Context, id uuid.UUID) (*dtos.DegreeLevel, error) {
	return r.Service.GetDegreeLevel(ctx, id)
}

// DegreeLevels is the resolver for the degreeLevels field.
func (r *queryResolver) DegreeLevels(ctx context.Context, orderBy *dtos.DegreeLevelAggregationInput, take *int, skip *int, where *dtos.DegreeLevelWhereInput) (*dtos.PaginatedDegreeLevelResponse, error) {
	return r.Service.PaginatedDegreeLevels(ctx, orderBy, take, skip, where)
}
