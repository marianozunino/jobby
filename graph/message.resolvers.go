package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.35

import (
	"context"

	"github.com/marianozunino/cc-backend-go/dtos"
)

// SendMessages implements generated.MutationResolver.
func (r *mutationResolver) SendMessage(ctx context.Context, input dtos.MessageCreateInput) (*dtos.Message, error) {
	return r.Service.SendMessage(ctx, input)
}

// DeleteMessage implements generated.MutationResolver.
func (r *mutationResolver) DeleteMessage(ctx context.Context, id string) (*dtos.Message, error) {
	return r.Service.DeleteMessage(ctx, id)
}

// UpdateMessage implements generated.MutationResolver.
func (r *mutationResolver) UpdateMessage(ctx context.Context, id string, input dtos.MessageUpdateInput) (*dtos.Message, error) {
	return r.Service.UpdateMessage(ctx, id, input)
}

// Messages implements generated.QueryResolver.
func (r *queryResolver) Messages(ctx context.Context, orderBy *dtos.MessageAggregationInput, take *int, skip *int) (*dtos.PaginatedMessageResponse, error) {
	return r.Service.PaginatedMessages(ctx, orderBy, take, skip)
}

// Message implements generated.QueryResolver.
func (r *queryResolver) Message(ctx context.Context, id string) (*dtos.Message, error) {
	return r.Service.GetMessage(ctx, id)
}
