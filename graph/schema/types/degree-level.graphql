type DegreeLevel {
  id: ID!
  name: String!

  createdAt: Timestamp!
  updatedAt: Timestamp!
  deletedAt: Timestamp
}

input DegreeLevelAggregationInput {
  id: SortOrder
  name: SortOrder

  createdAt: SortOrder
  updatedAt: SortOrder
  deletedAt: SortOrder
}

input DegreeLevelWhereInput {
  id: ID
  name: String
}

input DegreeLevelCreateInput {
  name: String!
}

input DegreeLevelUpdateInput {
  name: String!
}

type PaginatedDegreeLevelResponse {
  edges: [DegreeLevel!]!
  total: Int!
  take: Int
  skip: Int
}

extend type Query {
  degreeLevel(id: ID!): DegreeLevel!
  degreeLevels(
    orderBy: DegreeLevelAggregationInput
    take: Int = 10
    skip: Int = 0
    where: DegreeLevelWhereInput
  ): PaginatedDegreeLevelResponse!
}

extend type Mutation {
  createDegreeLevel(input: DegreeLevelCreateInput!): DegreeLevel!
  deleteDegreeLevel(id: ID!): DegreeLevel!
  updateDegreeLevel(id: ID!, input: DegreeLevelUpdateInput!): DegreeLevel!
}
