package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.35

import (
	"context"

	"github.com/marianozunino/cc-backend-go/dtos"
	"github.com/marianozunino/cc-backend-go/graph/generated"
)

// Status is the resolver for the status field.
func (r *queryResolver) Status(ctx context.Context, id string) (*dtos.Status, error) {
	return r.GetStatus(id)
}

// Statuses is the resolver for the statuses field.
func (r *queryResolver) Statuses(ctx context.Context, orderBy *dtos.StatusAggregationInput, take *int, skip *int) (*dtos.PaginatedStatusResponse, error) {
	return r.PaginatedStatuses(orderBy, take, skip)
}

// Messages implements generated.QueryResolver.
func (r *queryResolver) Messages(ctx context.Context, orderBy *dtos.MessageAggregationInput, take *int, skip *int) (*dtos.PaginatedMessageResponse, error) {
	return r.PaginatedMessages(orderBy, take, skip)
}

// Message implements generated.QueryResolver.
func (r *queryResolver) Message(ctx context.Context, id string) (*dtos.Message, error) {
	return r.GetMessage(id)
}

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
